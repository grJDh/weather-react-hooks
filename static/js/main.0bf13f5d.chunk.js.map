{"version":3,"sources":["font/Merriweather-Regular.ttf","Weather.js","DayWeek.js","Card.js","SearchBox.js","CardHourly.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Weather","props","className","time","weather","toLowerCase","weatherIcon","temp","DayWeek","console","log","timeNow","Date","day","getDay","dayOfTheWeek","dayDate","Card","onClick","chooseDay","SearchBox","type","placeholder","onKeyPress","updateCity","CardHourly","choosenDay","weatherHourly","map","entry","i","hour","dt_txt","Math","round","main","getHours","key","App","useState","setWeather","city","setCity","cityFound","setCityFound","setChoosenDay","useEffect","fetch","then","response","json","weatherJSON","name","list","startCity","event","target","value","cod","getDate","filter","thisDay","today","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"8LAAAA,EAAOC,QAAU,IAA0B,kD,wGCoE5BC,EAlEC,SAAAC,GAyDd,OACE,yBAAKC,UAAU,kDACVD,EAAME,MAAyB,IAAfF,EAAME,OAAgB,wBAAID,UAAU,iBAAiBD,EAAME,KAArC,OACzC,uBAAGD,UAAS,UA1DI,WAClB,OAAOD,EAAMG,QAAQC,eACnB,IAAK,SACD,MAAO,YACX,IAAK,eACH,MAAO,aACT,IAAK,YACH,MAAO,aACT,IAAK,WACH,MAAO,aACT,IAAK,OACH,MAAO,aACT,IAAK,WACH,MAAO,aACT,IAAK,UACH,MAAO,aACT,IAAK,gBACH,MAAO,aACT,IAAK,OACH,MAAO,aACT,IAAK,WACH,MAAO,aACT,IAAK,QACH,MAAO,aACT,IAAK,OACH,MAAO,aACT,IAAK,MACH,MAAO,aACT,IAAK,eACH,MAAO,aACT,IAAK,UACH,MAAO,aACT,IAAK,YACH,MAAO,aACT,IAAK,SACH,MAAO,aACT,IAAK,YACH,MAAO,aACT,IAAK,iBACH,MAAO,aACT,IAAK,MACH,MAAO,aACT,IAAK,QACH,MAAO,aACT,IAAK,OACH,MAAO,aACT,IAAK,cACH,MAAO,aACT,IAAK,QACH,MAAO,eACT,QACE,MAAO,YAOQC,GAAL,wBACZ,4BAAKL,EAAMM,KAAX,UCzBSC,EApCC,SAAAP,GA6Bd,OAFAQ,QAAQC,IAAIT,GAGV,6BACE,4BA7BiB,WACnB,IAAMU,EAAU,IAAIC,KAEpB,OAAOX,EAAMY,KACX,KAAKF,EAAQG,SACX,MAAO,QACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,YACT,KAAK,EACH,MAAO,WACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,WACT,KAAK,EACH,MAAO,SACT,QACE,MAAO,OAQJC,GAAL,KAAuBd,EAAMe,WClBpBC,EAVF,SAAAhB,GAEX,OACE,yBAAKiB,QAAS,WAAOjB,EAAMkB,UAAU,CAACH,QAASf,EAAMe,QAASH,IAAIZ,EAAMY,OAAQX,UAAU,oGACxF,kBAAC,EAAD,CAASW,IAAKZ,EAAMY,IAAKG,QAASf,EAAMe,UACxC,kBAAC,EAAD,CAASZ,QAASH,EAAMG,QAASG,KAAMN,EAAMM,SCGpCa,EAXG,SAAAnB,GAEhB,OACE,yBAAKC,UAAU,MACb,2BAAOmB,KAAK,SAASC,YAAY,kBAAkBC,WAAYtB,EAAMuB,WACnEtB,UAAU,sDCwBHuB,EA1BI,SAAAxB,GAEjB,OAAIA,EAAMyB,YACRjB,QAAQC,IAAIT,EAAM0B,eAEhB,yBAAKzB,UAAU,yEACb,kBAAC,EAAD,CAASW,IAAKZ,EAAMyB,WAAWb,IAAKG,QAASf,EAAMyB,WAAWV,UAE9D,yBAAKd,UAAU,mDACZD,EAAM0B,cAAcC,KAAI,SAACC,EAAOC,GAC/B,IAAMC,EAAO,IAAInB,KAAKiB,EAAMG,QAC5B,OAAO,kBAAC,EAAD,CACCzB,KAAM0B,KAAKC,MAAML,EAAMM,KAAK5B,MAC5BH,QAASyB,EAAMzB,QAAQ,GAAG+B,KAC1BhC,KAAM4B,EAAKK,WACXC,IAAKP,UAOb,+BC0FGQ,G,kBA3GH,WAEV,IAFgB,EAIcC,mBAFP,IAFP,mBAITnC,EAJS,KAIAoC,EAJA,OAMQD,mBAAS,OANjB,mBAMTE,EANS,KAMHC,EANG,OASkBH,oBAAS,GAT3B,mBASTI,EATS,KASEC,EATF,OAWoBL,mBAAS,GAX7B,mBAWTb,EAXS,KAWGmB,EAXH,KAahBC,qBAAU,WACRC,MAAM,iHACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAW,OAAIX,EAAWW,QACjC,IAEHL,qBAAU,WACJ1C,EAAQqC,MACVC,EAAQtC,EAAQqC,KAAKW,QAEtB,CAAChD,IAEJ,IAgBMe,EAAY,SAACN,GACjBJ,QAAQC,IAAIG,GACZgC,EAAchC,IAGVF,EAAU,IAAIC,KAEpB,OAAIR,EAAQiD,KAER,6BACE,wBAAInD,UAAU,+CAAd,oBACA,wBAAIA,UAAU,iBAAiBuC,GAC/B,kBAAC,EAAD,CAAWa,UA9CC,SA8CqB9B,WA5BpB,SAAC+B,GACA,UAAdA,EAAMlB,KACRU,MAAM,sDAAwDQ,EAAMC,OAAOC,MAAQ,wDAChFT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACoB,QAApBA,EAAYO,IACdd,GAAa,IAEbA,GAAa,GACbJ,EAAWW,WAqBZR,GAAc,wBAAIzC,UAAU,qBAAd,kBAEjB,yBAAKA,UAAU,gDACb,yBAAKA,UAAU,iCACXS,EAAQyB,WAAa,IACrB,kBAAC,EAAD,CAAMvB,IAAKF,EAAQG,SACnBE,QAASL,EAAQgD,UACjBpD,KAAM0B,KAAKC,MAAM9B,EAAQiD,KAAK,GAAGlB,KAAK5B,MACtCH,QAASA,EAAQiD,KAAK,GAAGjD,QAAQ,GAAG+B,KACpChB,UAAWA,IAIZf,EAAQiD,KAAKO,QAAO,SAAC/C,GAEpB,GAA0B,KADb,IAAID,KAAKC,EAAImB,QAChBI,WAER,OADA3B,QAAQC,IAAIG,GACLA,KAERe,KAAI,SAACiC,EAAS/B,GACf,IAAMgC,EAAQ,IAAIlD,KAAKiD,EAAQ7B,QAC/B,OAAO,kBAAC,EAAD,CACCnB,IAAKiD,EAAMhD,SACXE,QAAS8C,EAAMH,UACfpD,KAAM0B,KAAKC,MAAM2B,EAAQ1B,KAAK5B,MAC9BH,QAASyD,EAAQzD,QAAQ,GAAG+B,KAC5BhB,UAAWA,EACXkB,IAAKP,QAIjB,kBAAC,EAAD,CACEJ,WAAYA,EACZC,cAAevB,EAAQiD,KAAKO,QAAO,SAAC/B,GAElC,GADa,IAAIjB,KAAKiB,EAAMG,QAClB2B,YAAejC,EAAWV,QAClC,OAAOa,SASjB,wBAAI3B,UAAU,4CAAd,gBClGc6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3B,MAAK,SAAA4B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtE,QAAQsE,MAAMA,EAAMC,c","file":"static/js/main.0bf13f5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Merriweather-Regular.c97a9fc2.ttf\";","import React from 'react';\r\n\r\nconst Weather = props => {\r\n\r\n  const weatherIcon = () => {\r\n    switch(props.weather.toLowerCase()) {\r\n      case 'clouds':\r\n          return 'wi-cloudy';\r\n      case 'thunderstorm':\r\n        return 'wi-owm-200';\r\n      case 'lightning':\r\n        return 'wi-owm-210';\r\n      case 'sprinkle':\r\n        return 'wi-owm-300';\r\n      case 'rain':\r\n        return 'wi-owm-302';\r\n      case 'rain-mix':\r\n        return 'wi-owm-310';\r\n      case 'showers':\r\n        return 'wi-owm-313';\r\n      case 'storm-showers':\r\n        return 'wi-owm-531';\r\n      case 'snow':\r\n        return 'wi-owm-600';\r\n      case 'day-haze':\r\n        return 'wi-owm-721';\r\n      case 'smoke':\r\n        return 'wi-owm-711';\r\n      case 'dust':\r\n        return 'wi-owm-731';\r\n      case 'fog':\r\n        return 'wi-owm-741';\r\n      case 'cloudy-gusts':\r\n        return 'wi-owm-771';\r\n      case 'tornado':\r\n        return 'wi-owm-781';\r\n      case 'day-sunny':\r\n        return 'wi-owm-800';\r\n      case 'cloudy':\r\n        return 'wi-owm-804';\r\n      case 'hurricane':\r\n        return 'wi-owm-902';\r\n      case 'snowflake-cold':\r\n        return 'wi-owm-903';\r\n      case 'hot':\r\n        return 'wi-owm-904';\r\n      case 'windy':\r\n        return 'wi-owm-905';\r\n      case 'hail':\r\n        return 'wi-owm-906';\r\n      case 'strong-wind':\r\n        return 'wi-owm-957';\r\n      case 'clear':\r\n        return 'wi-day-sunny';\r\n      default:\r\n        return 'wi-alien';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='flex flex-column justify-between items-center'>\r\n      {((props.time) || (props.time === 0)) && <h2 className='tc f4 lh-copy'>{props.time}:00</h2>}\r\n      <i className={`${weatherIcon()} wi f-headline ma1`}></i>\r\n      <h3>{props.temp}Â°</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import React from 'react';\r\n\r\nconst DayWeek = props => {\r\n\r\n  const dayOfTheWeek = () => {\r\n    const timeNow = new Date();\r\n\r\n    switch(props.day) {\r\n      case timeNow.getDay():\r\n        return 'Today';\r\n      case 1:\r\n        return 'Monday';\r\n      case 2:\r\n        return 'Tuesday';\r\n      case 3:\r\n        return 'Wednesday';\r\n      case 4:\r\n        return 'Thursday';\r\n      case 5:\r\n        return 'Friday';\r\n      case 6:\r\n        return 'Saturday';\r\n      case 0:\r\n        return 'Sunday';\r\n      default:\r\n        return '???';\r\n    }\r\n  }\r\n\r\n  console.log(props);\r\n\r\n  return (\r\n    <div>\r\n      <h2>{dayOfTheWeek()}, {props.dayDate}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DayWeek;\r\n","import React from 'react';\r\n\r\nimport Weather from './Weather';\r\nimport DayWeek from './DayWeek';\r\n\r\nconst Card = props => {\r\n\r\n  return (\r\n    <div onClick={() => {props.chooseDay({dayDate: props.dayDate, day:props.day})}} className='flex flex-column ma2 pa2 br3 justify-between w5 items-center grow pointer bg-near-white shadow-5'>\r\n      <DayWeek day={props.day} dayDate={props.dayDate}/>\r\n      <Weather weather={props.weather} temp={props.temp} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nconst SearchBox = props => {\r\n\r\n  return (\r\n    <div className='tc'>\r\n      <input type='search' placeholder='Enter city here' onKeyPress={props.updateCity}\r\n        className='h2 f4 lh-copy bg-near-white shadow-1 mb4 ba br2'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nimport Weather from './Weather';\r\nimport DayWeek from './DayWeek';\r\n\r\nconst CardHourly = props => {\r\n\r\n  if (props.choosenDay) {\r\n    console.log(props.weatherHourly);\r\n    return (\r\n      <div className='flex flex-column ma2 pa2 br3 w-70 items-center bg-near-white shadow-5'>\r\n        <DayWeek day={props.choosenDay.day} dayDate={props.choosenDay.dayDate}/>\r\n      \r\n        <div className='flex flex-wrap justify-around items-center w-90'>\r\n          {props.weatherHourly.map((entry, i) => {\r\n            const hour = new Date(entry.dt_txt);\r\n            return <Weather\r\n                    temp={Math.round(entry.main.temp)}\r\n                    weather={entry.weather[0].main}\r\n                    time={hour.getHours()}\r\n                    key={i}\r\n                    />\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (<div></div>);\r\n  }\r\n}\r\n\r\nexport default CardHourly;","import React, { useState, useEffect } from 'react';\n\nimport Card from './Card';\nimport SearchBox from './SearchBox';\nimport CardHourly from './CardHourly';\n\nimport './css/Card.css';\nimport './font/Merriweather-Regular.ttf';\nimport './css/weather-icons.min.css';\n\nconst App = () => {\n\n  const weatherInitial = [];\n\n  const [weather, setWeather] = useState(weatherInitial);\n\n  const [city, setCity] = useState('???');\n  const startCity = 'Moscow';\n\n  const [cityFound, setCityFound] = useState(true);\n\n  const [choosenDay, setChoosenDay] = useState(0);\n\n  useEffect(() => {\n    fetch('https://api.openweathermap.org/data/2.5/forecast?q=' + startCity + '&appid=2c9dc6f2bedb657466b0cab93ce56dc6&units=metric')\n      .then(response => response.json())\n      .then(weatherJSON => setWeather(weatherJSON));\n  }, []);\n\n  useEffect(() => {\n    if (weather.city) {\n      setCity(weather.city.name);\n    }\n  }, [weather]);\n\n  const updateCity = (event) => {\n    if (event.key === 'Enter') {\n      fetch('https://api.openweathermap.org/data/2.5/forecast?q=' + event.target.value + '&appid=2c9dc6f2bedb657466b0cab93ce56dc6&units=metric')\n        .then(response => response.json())\n        .then(weatherJSON => {\n          if (weatherJSON.cod === '404') {\n            setCityFound(false);\n          } else {\n            setCityFound(true);\n            setWeather(weatherJSON);\n          }\n          \n        });\n    }\n  }\n\n  const chooseDay = (day) => {\n    console.log(day);\n    setChoosenDay(day);\n  }\n\n  const timeNow = new Date();\n\n  if (weather.list) {\n    return (\n      <div>\n        <h1 className='tc font-mw f-subheadline-ns lh-title normal'>Weather Forecast</h1>\n        <h3 className='tc f4 lh-copy'>{city}</h3>\n        <SearchBox startCity={startCity} updateCity={updateCity}/>\n\n        {(!cityFound) && <h3 className='tc f4 lh-copy red'>City not found</h3>}\n\n        <div className='flex justify-center flex-column items-center'>\n          <div className='flex flex-wrap justify-center'>\n            {(timeNow.getHours() > 12) &&\n              <Card day={timeNow.getDay()}\n              dayDate={timeNow.getDate()}\n              temp={Math.round(weather.list[0].main.temp)}\n              weather={weather.list[0].weather[0].main}\n              chooseDay={chooseDay}\n              />\n            }\n\n            {weather.list.filter((day) => {\n              const time = new Date(day.dt_txt);\n              if ((time.getHours()) === 12) {\n                console.log(day);\n                return day;\n              }\n            }).map((thisDay, i) => {\n              const today = new Date(thisDay.dt_txt);\n              return <Card \n                      day={today.getDay()}\n                      dayDate={today.getDate()}\n                      temp={Math.round(thisDay.main.temp)}\n                      weather={thisDay.weather[0].main}\n                      chooseDay={chooseDay}\n                      key={i}\n                    />\n            })}\n          </div>\n          <CardHourly\n            choosenDay={choosenDay}\n            weatherHourly={weather.list.filter((entry) => {\n              const time = new Date(entry.dt_txt);\n              if ((time.getDate()) === choosenDay.dayDate) {\n                return entry;\n              }\n              })}\n          />\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <h1 className='tc font-mw f-subheadline lh-title normal'>Loading...</h1>\n    );\n  }\n\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}